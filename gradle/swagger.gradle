/*
 * Plugin that provides API-first development using OpenAPI-generator to
 * generate Spring-MVC endpoint stubs at compile time from an OpenAPI definition file
 */
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.openapitools:openapi-generator-gradle-plugin:${openapiPluginDependencyVersion}"
    }
}
apply plugin: "org.openapi.generator"

void createOpenApiGenerateTask(String ymlName) {
    String taskName = "openApiGenerate_" + ymlName;
    task(taskName, type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
        generatorName = "spring"
        inputSpec = "$rootDir/src/main/resources/swagger/${ymlName}.yml".toString()
        outputDir = "$buildDir/openapi".toString()
        apiPackage = "com.icthh.xm.tmf.ms.communication.web.api"
        modelPackage = "com.icthh.xm.tmf.ms.communication.web.api.model"
        apiFilesConstrainedTo = [""]
        modelFilesConstrainedTo = [""]
        supportingFilesConstrainedTo = ["ApiUtil.java"]
        configOptions = [delegatePattern: "true", title: "communication"]
        validateSpec = true
        importMappings = [Problem:"org.zalando.problem.Problem"]
    }
    compileJava.dependsOn(taskName)

}

String[] ymlNames = [
    "api",
    "api-extension"
]
for (String ymlName : ymlNames) {
    createOpenApiGenerateTask(ymlName);
}

sourceSets {
    main {
        java {
            srcDir file("${project.buildDir.path}/openapi/src/main/java")
        }
    }
}

