dependencies {
}

def profiles = "prod"
if (project.hasProperty("no-liquibase")) {
    profiles += ",no-liquibase"
}

if (project.hasProperty("swagger")) {
    profiles += ",swagger"
}

springBoot {
    buildInfo()
}

bootRun {
    args = []
}


processResources {
    inputs.property('version', version)
    inputs.property('springProfiles', profiles)
    filesMatching("**/application.yml") {
        filter {
            it.replace("#project.version#", version)
        }
    }
    filesMatching("**/bootstrap.yml") {
        filter {
            it.replace("#spring.profiles.active#", profiles)
        }
    }
}

generateGitProperties {
    onlyIf {
        !source.isEmpty()
    }
}

gitProperties {
    keys = ["git.branch", "git.commit.id.abbrev", "git.commit.id.describe"]
}

