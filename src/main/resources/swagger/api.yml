swagger: '2.0'
info:
  title: Communication Management
  description: This is Swagger UI environment generated for the TMF Communication Management specification
  version: '2.0'
host: serverRoot
basePath: /api/communicationManagement/v2/
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /communicationMessage:
    get:
      operationId: listCommunicationMessage
      summary: List or find 'CommunicationMessage' objects
      tags:
        - communicationMessage
      parameters:
        - type: string
          required: false
          in: query
          name: fields
          description: Comma separated properties to display in response
        - type: integer
          required: false
          in: query
          name: offset
          description: Requested index for start of resources to be provided in response
        - type: integer
          required: false
          in: query
          name: limit
          description: Requested number of resources to be provided in response
      responses:
        '200':
          description: Ok
          schema:
            items:
              $ref: '#/definitions/CommunicationMessage'
            type: array
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: Method Not allowed
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    post:
      operationId: createCommunicationMessage
      summary: Creates a 'CommunicationMessage'
      tags:
        - communicationMessage
      parameters:
        - schema:
            $ref: '#/definitions/CommunicationMessage_Create'
          required: true
          in: body
          name: communicationMessage
          description: The Communication Message to be created
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/CommunicationMessage'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: Method Not allowed
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
  /communicationMessage/send:
    post:
      operationId: creates a new CommunicationMessage and send it
      summary: Creates a 'CommunicationMessage' and send it
      tags:
        - communicationMessage
      parameters:
        - schema:
            $ref: '#/definitions/CommunicationMessage_Create'
          required: true
          in: body
          name: communicationMessage
          description: The Communication Message to be created
      responses:
        '200':
          description: Sent
          schema:
            $ref: '#/definitions/CommunicationMessage'
        '201':
          description: Sent
          schema:
            $ref: '#/definitions/EventSubscription'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: Method Not allowed
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
  '/communicationMessage/{id}':
    get:
      operationId: retrieveCommunicationMessage
      summary: Retrieves a 'CommunicationMessage' by Id
      tags:
        - communicationMessage
      parameters:
        - required: true
          type: string
          name: id
          in: path
          description: Identifier of the Communication Message
      responses:
        '200':
          description: Ok
          schema:
            items:
              $ref: '#/definitions/CommunicationMessage'
            type: array
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: Method Not allowed
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    patch:
      operationId: patchCommunicationMessage
      summary: Updates partially a 'CommunicationMessage' by Id
      tags:
        - communicationMessage
      parameters:
        - required: true
          type: string
          name: id
          in: path
          description: Identifier of the Communication Message
        - schema:
            $ref: '#/definitions/CommunicationMessage_Update'
          required: true
          in: body
          name: communicationMessage
          description: The Communication Message to be updated
      responses:
        '200':
          description: Updated
          schema:
            $ref: '#/definitions/CommunicationMessage'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: Method Not allowed
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: deleteCommunicationMessage
      summary: Deletes a 'CommunicationMessage' by Id
      tags:
        - communicationMessage
      parameters:
        - required: true
          type: string
          name: id
          in: path
          description: Identifier of the Communication Message
      responses:
        '204':
          description: Deleted
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: Method Not allowed
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
  '/communicationMessage/{id}/send':
    post:
      operationId: 'Sends a CommunicationMessage '
      summary: 'Sends ''CommunicationMessage'' '
      tags:
        - communicationMessage
      parameters:
        - required: true
          type: string
          name: id
          in: path
          description: Identifier of the Communication Message
      responses:
        '200':
          description: Sent
          schema:
            $ref: '#/definitions/CommunicationMessage'
        '201':
          description: Sent
          schema:
            $ref: '#/definitions/EventSubscription'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: Method Not allowed
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
  /hub:
    post:
      operationId: registerListener
      summary: Register a listener
      description: 'Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.'
      tags:
        - events subscription
      parameters:
        - name: data
          schema:
            $ref: '#/definitions/EventSubscriptionInput'
          required: true
          in: body
          description: Data containing the callback endpoint to deliver the information
      responses:
        '201':
          description: Subscribed
          schema:
            $ref: '#/definitions/EventSubscription'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: Method Not allowed
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
  '/hub/{id}':
    delete:
      operationId: unregisterListener
      summary: Unregister a listener
      description: 'Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.'
      tags:
        - events subscription
      parameters:
        - name: id
          type: string
          required: true
          in: path
          description: The id of the registered listener
      responses:
        '204':
          description: Deleted
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '405':
          description: Method not allowed
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
definitions:
  CommunicationMessage:
    type: object
    description: 'Communication message means a notification approach in the format of a message which can be dispatched (sent) to the certain user by the system with the content which can be felt and understood by the recipient. The user can be either a final customer or a customer service agent. The message can reach the customer in different interaction channels, including: email, short message, mobile app notification (push).'
    required:
      - type
      - content
      - sender
      - receiver
    properties:
      messageParts:
        type: integer
      callbackFlag:
        type: boolean
      content:
        type: string
        description: The content of the communication message.
      description:
        type: string
        description: Description for the whole object
      href:
        type: string
        description: Hypertext Reference of the Communication Message.
      id:
        type: string
        description: Unique identifier of Communication Message
      logFlag:
        type: boolean
      priority:
        type: string
        description: |-
          The priority of the communication message.
          Small number means higher priority.
      sendTime:
        type: string
        format: date-time
        description: The time of sending communication message.
      sendTimeComplete:
        type: string
        format: date-time
        description: The time of completion of sending communication message.
      status:
        type: string
        description: Status of communication message
      subject:
        type: string
        description: |-
          The title of the message.
          It is necessary for the email and mobile app push.
      tryTimes:
        type: integer
      type:
        type: string
        description: |-
          1: SMS
          2: Email
          3: Mobile app push notification
      version:
        type: string
        description: The version of the communication message
      attachment:
        type: array
        items:
          $ref: '#/definitions/Attachment'
      receiver:
        type: array
        items:
          $ref: '#/definitions/Receiver'
      sender:
        $ref: '#/definitions/Sender'
      characteristic:
        type: array
        items:
          $ref: '#/definitions/CommunicationRequestCharacteristic'
      '@type':
        type: string
        description: The class type of the actual resource (for type extension).
      '@schemaLocation':
        type: string
        description: A link to the schema describing a resource (for type extension).
      '@baseType':
        type: string
        description: The base type for use in polymorphic collections
  CommunicationMessage_Create:
    type: object
    description: |-
      Communication message means a notification approach in the format of a message which can be dispatched (sent) to the certain user by the system with the content which can be felt and understood by the recipient. The user can be either a final customer or a customer service agent. The message can reach the customer in different interaction channels, including: email, short message, mobile app notification (push).
      Skipped properties: id,href
    required:
      - type
      - content
      - sender
      - receiver
    properties:
      callbackFlag:
        type: boolean
      content:
        type: string
        description: The content of the communication message.
      description:
        type: string
        description: Description for the whole object
      logFlag:
        type: boolean
      priority:
        type: string
        description: |-
          The priority of the communication message.
          Small number means higher priority.
      sendTime:
        type: string
        format: date-time
        description: The time of sending communication message.
      sendTimeComplete:
        type: string
        format: date-time
        description: The time of completion of sending communication message.
      status:
        type: string
        description: Status of communication message
      subject:
        type: string
        description: |-
          The title of the message.
          It is necessary for the email and mobile app push.
      tryTimes:
        type: integer
      type:
        type: string
        description: |-
          1: SMS
          2: Email
          3: Mobile app push notification
      version:
        type: string
        description: The version of the communication message
      attachment:
        type: array
        items:
          $ref: '#/definitions/Attachment'
      receiver:
        type: array
        items:
          $ref: '#/definitions/Receiver'
      sender:
        $ref: '#/definitions/Sender'
      characteristic:
        type: array
        items:
          $ref: '#/definitions/CommunicationRequestCharacteristic'
      '@type':
        type: string
        description: The class type of the actual resource (for type extension).
      '@schemaLocation':
        type: string
        description: A link to the schema describing a resource (for type extension).
      '@baseType':
        type: string
        description: The base type for use in polymorphic collections
  CommunicationMessage_Update:
    type: object
    description: |-
      Communication message means a notification approach in the format of a message which can be dispatched (sent) to the certain user by the system with the content which can be felt and understood by the recipient. The user can be either a final customer or a customer service agent. The message can reach the customer in different interaction channels, including: email, short message, mobile app notification (push).
      Skipped properties: id,href,id,href
    properties:
      callbackFlag:
        type: boolean
      content:
        type: string
        description: The content of the communication message.
      description:
        type: string
        description: Description for the whole object
      logFlag:
        type: boolean
      priority:
        type: string
        description: |-
          The priority of the communication message.
          Small number means higher priority.
      sendTime:
        type: string
        format: date-time
        description: The time of sending communication message.
      sendTimeComplete:
        type: string
        format: date-time
        description: The time of completion of sending communication message.
      status:
        type: string
        description: Status of communication message
      subject:
        type: string
        description: |-
          The title of the message.
          It is necessary for the email and mobile app push.
      tryTimes:
        type: integer
      type:
        type: string
        description: |-
          1: SMS
          2: Email
          3: Mobile app push notification
      version:
        type: string
        description: The version of the communication message
      attachment:
        type: array
        items:
          $ref: '#/definitions/Attachment'
      receiver:
        type: array
        items:
          $ref: '#/definitions/Receiver'
      sender:
        $ref: '#/definitions/Sender'
      characteristic:
        type: array
        items:
          $ref: '#/definitions/CommunicationRequestCharacteristic'
      '@type':
        type: string
        description: The class type of the actual resource (for type extension).
      '@schemaLocation':
        type: string
        description: A link to the schema describing a resource (for type extension).
      '@baseType':
        type: string
        description: The base type for use in polymorphic collections
  Attachment:
    type: object
    description: 'Complements the description of an element (for instance a product) through video, pictures...'
    properties:
      description:
        type: string
        description: A narrative text describing the content of the attachment
      href:
        type: string
        description: Reference of the attachment
      id:
        type: string
        description: Unique identifier of the attachment
      mimeType:
        type: string
        description: The mime type of the document as defined in RFC 2045 and RFC 2046 specifications.
      name:
        type: string
        description: The name of the file
      path:
        type: string
        description: The path of the attached file
      size:
        type: integer
        description: 'The size of the file (sizeUnit if present indicates the unit, otherwise kilobytes is the default).'
      sizeUnit:
        type: integer
        description: 'The unit size for expressing the size of the file (MB,kB...)'
      url:
        type: string
        description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
      validFor:
        $ref: '#/definitions/TimePeriod'
        description: Period of validity of the attachment
      '@type':
        type: string
        description: The class type of the actual resource (for type extension).
      '@schemaLocation':
        type: string
        description: A link to the schema describing a resource (for type extension).
      '@baseType':
        type: string
        description: The base type for use in polymorphic collections
  Receiver:
    type: object
    description: <b><i>Receivers of the communication message.</i></b>
    required:
      - id
    properties:
      appUserId:
        type: string
        description: ID of the mobile app user
      email:
        type: string
        description: 'Receiver address of email, if the communication type is email'
      id:
        type: string
        description: ID of the receiver
      ip:
        type: string
        description: IP address of the receiver
      name:
        type: string
        description: Name of the receiver
      phoneNumber:
        type: string
        description: 'Phone number of the receiver, if the communication type is SMS.'
      type:
        type: string
        description: The type of the receiver of the communication message
      relatedParty:
        $ref: '#/definitions/RelatedPartyRef'
      '@type':
        type: string
        description: The class type of the actual resource (for type extension).
      '@baseType':
        type: string
        description: The class type of the actual resource (for type extension).
      '@schemaLocation':
        type: string
        description: A link to the schema describing a resource (for type extension).
  Sender:
    type: object
    description: <b><i>Sender of the communication message.</i></b>
    required:
      - id
    properties:
      email:
        type: string
        description: 'Sender address of email, if the communication type is email'
      id:
        type: string
        description: ID of the sender
      name:
        type: string
        description: Name of the sender
      phoneNumber:
        type: string
        description: 'Phone number of the sender, if the communication type is SMS.'
      relatedParty:
        $ref: '#/definitions/RelatedPartyRef'
      '@type':
        type: string
        description: The class type of the actual resource (for type extension).
      '@baseType':
        type: string
        description: The class type of the actual resource (for type extension).
      '@schemaLocation':
        type: string
        description: A link to the schema describing a resource (for type extension).
  CommunicationRequestCharacteristic:
    type: object
    description: <b><i>The values of parameters which are used in the content if the content contains them.</i></b>
    required:
      - name
      - value
    properties:
      name:
        type: string
        description: Content parameter identifier
      value:
        type: string
        description: Content parameter value
  TimePeriod:
    type: object
    description: A base / value business entity used to represent a period of time between two timepoints.
    properties:
      endDateTime:
        type: string
        format: date-time
        description: 'An instant of time, ending at the TimePeriod.'
      startDateTime:
        type: string
        format: date-time
        description: 'An instant of time, starting at the TimePeriod'
  RelatedPartyRef:
    type: object
    description: RelatedParty reference. A related party defines party or party role linked to a specific entity.
    properties:
      href:
        type: string
        description: 'Reference of the related party, could be a party reference or a party role reference'
      id:
        type: string
        description: Unique identifier of a related party
      name:
        type: string
        description: Name of the related party
      role:
        type: string
        description: Role of the related party.
      '@referredType':
        type: string
        description: The actual type of the target instance when needed for disambiguation.
  EventSubscription:
    required:
      - id
      - callback
    properties:
      id:
        type: string
        description: Id of the listener
      callback:
        type: string
        description: The callback being registered.
      query:
        type: string
        description: additional data to be passed
  EventSubscriptionInput:
    required:
      - callback
    properties:
      callback:
        type: string
        description: The callback being registered.
      query:
        type: string
        description: additional data to be passed
  Error:
    required:
      - code
      - reason
    properties:
      code:
        type: integer
        description: Application related code.
      reason:
        type: integer
        description: Text that explains the reason for error.
      message:
        type: string
        description: (optional) Text that provide more details and corrective actions related to the error.
      status:
        type: integer
        description: (optional) http error code extension like 400-2
      referenceError:
        type: string
        description: (optional) A URL to online documentation that provides more information about the error.
      '@type':
        type: string
        description: (optional) The class type of a REST resource.
      '@schemaLocation':
        type: string
        description: (optional) A link to the schema describing a REST resource.
